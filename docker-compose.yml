version: "2"
volumes:
  pgdata:
  cache:
services:
  postgres:
    image: "openmaptiles/postgis:2.9"
    command: >
        postgres -c shared_preload_libraries=pg_stat_statements -c pg_stat_statements.max=8192 -c pg_stat_statements.track=all -c max_connections=500 -c effective_cache_size=8192MB -c shared_buffers=16384MB -c work_mem=128MB -c max_parallel_workers_per_gather=8 -c dynamic_shared_memory_type=posix
    volumes:
    - pgdata:/var/lib/postgresql/data
    networks:
    - postgres_conn
    ports:
     - "5432"
    env_file: .env
  import-osm:
    image: "openmaptiles/import-osm:latest"
    env_file: .env
    environment:
      DIFF_MODE: ${DIFF_MODE}
    networks:
    - postgres_conn
    volumes:
     - ./data:/import
     - ./data:/mapping
     - cache:/cache
  generate-sql:
    build: "./generate-sql"
    image: map1/generate-sql
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./build/sql:/sql
      - ./data/stylesheets:/stylesheets
  generate-vodak-sql:
    build: "./generate-vodak-sql"
    image: map1/generate-vodak-sql
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./build/sql:/sql
  generate-cartocss:
    build: "./generate-cartocss"
    image: map1/generate-cartocss
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./build/pattern:/pattern
      - ./build/shield:/shield
      - ./build/symbol:/symbol
      - ./build/cartocss:/cartocss
      - ./data/stylesheets:/stylesheets
  compile-cartocss:
    build: "./compile-cartocss"
    image: map1/compile-cartocss
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./build/mapnik-styles:/mapnik-styles
      - ./build/cartocss:/cartocss
  import-sql:
    build: "./import-sql"
    image: map1/import-sql
    env_file: .env
    networks:
    - postgres_conn
    volumes:
     - ./build/sql:/sql
  import-dem:
    build: "./import-dem"
    image: map1/import-dem
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./data/dem:/dem
      - ./build/sql:/sql
      - ./build/hillshade:/hillshade
  generate-osmcsymbols:
    build: "./generate-osmcsymbols"
    image: map1/generate-osmcsymbols
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./build/osmcsymbol_png:/osmcsymbol_png
      - ./build/osmcsymbol:/build
      - ./data/osmcsymbol:/osmcsymbol
  generate-highway-access:
    build: "./generate-highway-access"
    image: map1/generate-highway-access
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./build/highway-access:/build
      - ./data/highway-access:/highway_access
  relations2lines:
    build: "./relations2lines"
    image: map1/relations2lines
    env_file: .env
    networks:
      - postgres_conn
  calc-densities:
    build: "./calc-densities"
    image: map1/calc-densities
    env_file: .env
    networks:
      - postgres_conn
  render-map:
    build: "./render-map"
    image: map1/render-map
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./data/shp:/shp
      - ./data/fonts:/fonts
      - ./build/pattern:/pattern
      - ./build/shield:/shield
      - ./build/symbol:/symbol
      - ./build/osmcsymbol://osmcsymbol/generated
      - ./build/highway-access:/highway-access
      - ./build/mapnik-styles:/mapnik-styles
      - ./build/render:/render
  jupyter:
    build: "./jupyter"
    image: map1/jupyter
    depends_on:
      - render-map
    env_file: .env
    networks:
      - postgres_conn
    volumes:
      - ./data/shp:/shp
      - ./data/fonts:/fonts
      - ./build/pattern:/pattern
      - ./build/shield:/shield
      - ./build/symbol:/symbol
      - ./build/osmcsymbol:/osmcsymbol/generated
      - ./build/highway-access:/highway-access
      - ./build/dem:/dem
      - ./build/mapnik-styles:/mapnik-styles
      - ./build/render:/render
      - ./jupyter-notebooks:/notebooks
  frontend:
    build: "./frontend"
    image: map1/frontend
    volumes:
     - ./build/render:/usr/share/nginx/html/tiles
    ports:
     - "80"
    env_file: .env

  grafana:
    image: grafana/grafana
    env_file: .env
    networks:
      - postgres_conn
    ports:
      - "3000"
    volumes:
      - ./grafana:/var/lib/grafana
    user: "${UID}:${GID}"

networks:
  postgres_conn:
    driver: bridge
